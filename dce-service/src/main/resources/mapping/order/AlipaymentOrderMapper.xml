<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dce.business.dao.alipaymentOrder.AlipaymentOrderMapper">
  <resultMap id="BaseResultMap" type="com.dce.business.entity.alipaymentOrder.AlipaymentOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderId" jdbcType="INTEGER" property="orderid" />
    <result column="orderCode" jdbcType="VARCHAR" property="ordercode" />
    <result column="orderStatus" jdbcType="INTEGER" property="orderstatus" />
    <result column="totalAmount" jdbcType="DECIMAL" property="totalamount" />
    <result column="receptAmount" jdbcType="DECIMAL" property="receptamount" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderId, orderCode, orderStatus, totalAmount, receptAmount, createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="com.dce.business.entity.alipaymentOrder.AlipaymentOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ct_alipay_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ct_alipay_trade
    where id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectByOrderCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ct_alipay_trade
    where orderCode = #{orderCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ct_alipay_trade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dce.business.entity.alipaymentOrder.AlipaymentOrderExample">
    delete from ct_alipay_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dce.business.entity.alipaymentOrder.AlipaymentOrder">
    insert into ct_alipay_trade (id, orderId, orderCode, 
      orderStatus, totalAmount, receptAmount, 
      createTime, updateTime)
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{ordercode,jdbcType=VARCHAR}, 
      #{orderstatus,jdbcType=INTEGER}, #{totalamount,jdbcType=DECIMAL}, #{receptamount,jdbcType=DECIMAL}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dce.business.entity.alipaymentOrder.AlipaymentOrder">
    insert into ct_alipay_trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderid != null">
        orderId,
      </if>
      <if test="ordercode != null">
        orderCode,
      </if>
      <if test="orderstatus != null">
        orderStatus,
      </if>
      <if test="totalamount != null">
        totalAmount,
      </if>
      <if test="receptamount != null">
        receptAmount,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="ordercode != null">
        #{ordercode,jdbcType=VARCHAR},
      </if>
      <if test="orderstatus != null">
        #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="totalamount != null">
        #{totalamount,jdbcType=DECIMAL},
      </if>
      <if test="receptamount != null">
        #{receptamount,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dce.business.entity.alipaymentOrder.AlipaymentOrderExample" resultType="java.lang.Long">
    select count(*) from ct_alipay_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ct_alipay_trade
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.ordercode != null">
        orderCode = #{record.ordercode,jdbcType=VARCHAR},
      </if>
      <if test="record.orderstatus != null">
        orderStatus = #{record.orderstatus,jdbcType=INTEGER},
      </if>
      <if test="record.totalamount != null">
        totalAmount = #{record.totalamount,jdbcType=DECIMAL},
      </if>
      <if test="record.receptamount != null">
        receptAmount = #{record.receptamount,jdbcType=DECIMAL},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ct_alipay_trade
    set id = #{record.id,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      orderCode = #{record.ordercode,jdbcType=VARCHAR},
      orderStatus = #{record.orderstatus,jdbcType=INTEGER},
      totalAmount = #{record.totalamount,jdbcType=DECIMAL},
      receptAmount = #{record.receptamount,jdbcType=DECIMAL},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dce.business.entity.alipaymentOrder.AlipaymentOrder">
    update ct_alipay_trade
    <set>
      <if test="orderid != null">
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="ordercode != null">
        orderCode = #{ordercode,jdbcType=VARCHAR},
      </if>
      <if test="orderstatus != null">
        orderStatus = #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="totalamount != null">
        totalAmount = #{totalamount,jdbcType=DECIMAL},
      </if>
      <if test="receptamount != null">
        receptAmount = #{receptamount,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dce.business.entity.alipaymentOrder.AlipaymentOrder">
    update ct_alipay_trade
    set orderId = #{orderid,jdbcType=INTEGER},
      orderCode = #{ordercode,jdbcType=VARCHAR},
      orderStatus = #{orderstatus,jdbcType=INTEGER},
      totalAmount = #{totalamount,jdbcType=DECIMAL},
      receptAmount = #{receptamount,jdbcType=DECIMAL},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>