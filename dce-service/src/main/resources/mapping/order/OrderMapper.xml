<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dce.business.dao.order.OrderMapper">
  <resultMap id="BaseResultMap" type="com.dce.business.entity.order.Order">
    <id column="orderId" jdbcType="BIGINT" property="orderid" />
    <result column="orderCode" jdbcType="VARCHAR" property="ordercode" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="qty" jdbcType="DECIMAL" property="qty" />
    <result column="totalPrice" jdbcType="DECIMAL" property="totalprice" />
    <result column="recAddress" jdbcType="VARCHAR" property="recaddress" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="orderStatus" jdbcType="INTEGER" property="orderstatus" />
    <result column="payStatus" jdbcType="INTEGER" property="paystatus" />
    <result column="payTime" jdbcType="TIMESTAMP" property="paytime" />
    <result column="orderType" jdbcType="INTEGER" property="ordertype" />
    <result column="matchOrderId" jdbcType="BIGINT" property="matchorderid" />
    <result column="salqty" jdbcType="DECIMAL" property="salqty" />
    <result column="accountType" jdbcType="VARCHAR" property="accounttype" />
    <result column="goodsId" jdbcType="BIGINT" property="goodsid" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="addressId" jdbcType="INTEGER" property="addressid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    orderId, orderCode, userId, qty, totalPrice, recAddress, createTime, orderStatus, 
    payStatus, payTime, orderType, matchOrderId, salqty, accountType, goodsId, price, 
    addressId, remark
  </sql>
  
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ct_order
    where userId = #{userId,jdbcType=BIGINT}
    order by createTime
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ct_order
    where orderId = #{orderid,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByExample" parameterType="com.dce.business.entity.order.OrderExample">
    delete from ct_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="com.dce.business.entity.order.Order">
    insert into ct_order (orderId, orderCode, userId, 
      qty, totalPrice, recAddress, 
      createTime, orderStatus, payStatus, 
      payTime, orderType, matchOrderId, 
      salqty, accountType, goodsId, 
      price, addressId, remark
      )
    values (#{orderid,jdbcType=BIGINT}, #{ordercode,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{qty,jdbcType=DECIMAL}, #{totalprice,jdbcType=DECIMAL}, #{recaddress,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{orderstatus,jdbcType=INTEGER}, #{paystatus,jdbcType=INTEGER}, 
      #{paytime,jdbcType=TIMESTAMP}, #{ordertype,jdbcType=INTEGER}, #{matchorderid,jdbcType=BIGINT}, 
      #{salqty,jdbcType=DECIMAL}, #{accounttype,jdbcType=VARCHAR}, #{goodsid,jdbcType=BIGINT}, 
      #{price,jdbcType=DECIMAL}, #{addressid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.dce.business.entity.order.Order">
    insert into ct_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderId,
      </if>
      <if test="ordercode != null">
        orderCode,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="totalprice != null">
        totalPrice,
      </if>
      <if test="recaddress != null">
        recAddress,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="orderstatus != null">
        orderStatus,
      </if>
      <if test="paystatus != null">
        payStatus,
      </if>
      <if test="paytime != null">
        payTime,
      </if>
      <if test="ordertype != null">
        orderType,
      </if>
      <if test="matchorderid != null">
        matchOrderId,
      </if>
      <if test="salqty != null">
        salqty,
      </if>
      <if test="accounttype != null">
        accountType,
      </if>
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="addressid != null">
        addressId,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=BIGINT},
      </if>
      <if test="ordercode != null">
        #{ordercode,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=DECIMAL},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="recaddress != null">
        #{recaddress,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstatus != null">
        #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="paystatus != null">
        #{paystatus,jdbcType=INTEGER},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordertype != null">
        #{ordertype,jdbcType=INTEGER},
      </if>
      <if test="matchorderid != null">
        #{matchorderid,jdbcType=BIGINT},
      </if>
      <if test="salqty != null">
        #{salqty,jdbcType=DECIMAL},
      </if>
      <if test="accounttype != null">
        #{accounttype,jdbcType=VARCHAR},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="addressid != null">
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.dce.business.entity.order.OrderExample" resultType="java.lang.Long">
    select count(*) from ct_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update ct_order
    <set>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=BIGINT},
      </if>
      <if test="record.ordercode != null">
        orderCode = #{record.ordercode,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.qty != null">
        qty = #{record.qty,jdbcType=DECIMAL},
      </if>
      <if test="record.totalprice != null">
        totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      </if>
      <if test="record.recaddress != null">
        recAddress = #{record.recaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderstatus != null">
        orderStatus = #{record.orderstatus,jdbcType=INTEGER},
      </if>
      <if test="record.paystatus != null">
        payStatus = #{record.paystatus,jdbcType=INTEGER},
      </if>
      <if test="record.paytime != null">
        payTime = #{record.paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ordertype != null">
        orderType = #{record.ordertype,jdbcType=INTEGER},
      </if>
      <if test="record.matchorderid != null">
        matchOrderId = #{record.matchorderid,jdbcType=BIGINT},
      </if>
      <if test="record.salqty != null">
        salqty = #{record.salqty,jdbcType=DECIMAL},
      </if>
      <if test="record.accounttype != null">
        accountType = #{record.accounttype,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsid != null">
        goodsId = #{record.goodsid,jdbcType=BIGINT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.addressid != null">
        addressId = #{record.addressid,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ct_order
    set orderId = #{record.orderid,jdbcType=BIGINT},
      orderCode = #{record.ordercode,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      qty = #{record.qty,jdbcType=DECIMAL},
      totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      recAddress = #{record.recaddress,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      orderStatus = #{record.orderstatus,jdbcType=INTEGER},
      payStatus = #{record.paystatus,jdbcType=INTEGER},
      payTime = #{record.paytime,jdbcType=TIMESTAMP},
      orderType = #{record.ordertype,jdbcType=INTEGER},
      matchOrderId = #{record.matchorderid,jdbcType=BIGINT},
      salqty = #{record.salqty,jdbcType=DECIMAL},
      accountType = #{record.accounttype,jdbcType=VARCHAR},
      goodsId = #{record.goodsid,jdbcType=BIGINT},
      price = #{record.price,jdbcType=DECIMAL},
      addressId = #{record.addressid,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.dce.business.entity.order.Order">
    update ct_order
    <set>
      <if test="ordercode != null">
        orderCode = #{ordercode,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=DECIMAL},
      </if>
      <if test="totalprice != null">
        totalPrice = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="recaddress != null">
        recAddress = #{recaddress,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstatus != null">
        orderStatus = #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="paystatus != null">
        payStatus = #{paystatus,jdbcType=INTEGER},
      </if>
      <if test="paytime != null">
        payTime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordertype != null">
        orderType = #{ordertype,jdbcType=INTEGER},
      </if>
      <if test="matchorderid != null">
        matchOrderId = #{matchorderid,jdbcType=BIGINT},
      </if>
      <if test="salqty != null">
        salqty = #{salqty,jdbcType=DECIMAL},
      </if>
      <if test="accounttype != null">
        accountType = #{accounttype,jdbcType=VARCHAR},
      </if>
      <if test="goodsid != null">
        goodsId = #{goodsid,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="addressid != null">
        addressId = #{addressid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dce.business.entity.order.Order">
    update ct_order
    set orderCode = #{ordercode,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      qty = #{qty,jdbcType=DECIMAL},
      totalPrice = #{totalprice,jdbcType=DECIMAL},
      recAddress = #{recaddress,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      orderStatus = #{orderstatus,jdbcType=INTEGER},
      payStatus = #{paystatus,jdbcType=INTEGER},
      payTime = #{paytime,jdbcType=TIMESTAMP},
      orderType = #{ordertype,jdbcType=INTEGER},
      matchOrderId = #{matchorderid,jdbcType=BIGINT},
      salqty = #{salqty,jdbcType=DECIMAL},
      accountType = #{accounttype,jdbcType=VARCHAR},
      goodsId = #{goodsid,jdbcType=BIGINT},
      price = #{price,jdbcType=DECIMAL},
      addressId = #{addressid,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where orderId = #{orderid,jdbcType=BIGINT}
  </update>
</mapper>